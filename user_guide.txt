
Note: $BASE_URL for sandbox "https://www.kempas.tk/karely"


Updated on 25 May 2020, add login, logout, verifyAccessToke, signUp, verifyAuthroizationCode, resetPassword, updatePassword  


CURL example:
$ curl -d '{"email":"cheowkwee@hotmail.com", "password": "May@2020"}' -H "Content-Type: application/json" -X POST http://localhost:3000/api/users/login



-------------------------------------------------------------------------------
Login function

Method: POST
Server URL: {$BASE_URL}/api/users/login

Path parameter: None
Query parameter: None
Header parameter: 
	1) "Content-Type": "application/json"

Request body (JSON format):
	{
		"email": "user email address",
		"password": "user password"
	}	


Response body:	
	Good response body (status 200)
	{
		"id": 25,
  		"last_name": "Goh",
  		"email": "cheowkwee@hotmail.com",
  		"phone_number": "+60126196907",
  		"avatar": null,
  		"biography": null,
  		"account_type": 0,
  		"status": 1,
  		"login_failed_count": 0,
  		"created_on": "2020-05-24T17:33:41.470Z",
  		"updated_on": "2020-05-24T17:33:41.470Z",
  		"session": {
    			"token": "557abf55-3964-4f4f-9002-8fcc99de863c",
    			"user_id": 25,
    			"remark": "Normal user session",
    			"session_type": 0,
    			"expired_on": "2020-06-25T10:30:29.105Z",
    			"created_on": "2020-05-25T10:30:29.110Z",
    			"updated_on": "2020-05-25T10:30:29.110Z"
  		}
	}

	Bad response body (status 400)
	{
		"message": "Error message"
	}


-------------------------------------------------------------------------------

Logout function

Method: POST
Server URL: {$BASE_URL}/api/users/logout

Path parameter: None
Query parameter: None
Header parameter: 
	1) "Content-Type": "application/json"

Request body (JSON format):
	{
		"token": "user access token from login output"
	}	


Response body:	
	Good response body (status 200)
		99	// return user id 

	Bad response body (status 400)
	{
		"message": "Error message"
	}


-------------------------------------------------------------------------------
Verify access token function

Method: POST
Server URL: {$BASE_URL}/api/users/verifyAccessToken

Path parameter: None
Query parameter: None
Header parameter: 
	1) "Content-Type": "application/json"

Request body (JSON format):
	{
		"token": "user access token from login output"
	}	


Response body:	
	Good response body (status 200)
		99	// return user id 

	Bad response body (status 400)
	{
		"message": "Error message"
	}


-------------------------------------------------------------------------------

Sign up function

Method: POST
Server URL: {$BASE_URL}/api/users/signUp

Path parameter: None
Query parameter: None
Header parameter: 
	1) "Content-Type": "application/json"

Request body (JSON format):
	{
		"first_name": "user first name"
		"last_name": "user last name"
		"phone_number": "user mobile phone number"
		"email": "user email address (username)",
		"password": "user password"
	}	


Response body:	
	Good response body (status 200)
	{
		"id": 26,
		"first_name": "CheowKwee",
		"last_name": "Goh",
		"email": "cheowkwee@hotmail.com",
		"phone_number": "+60126196907",
		"avatar": null,
		"biography": null,
		"account_type": 0,
		"status": 0,
		"login_failed_count": 0,
		"created_on": "2020-05-25T10:47:17.704Z",
		"updated_on": "2020-05-25T10:47:17.704Z",
		"session": {
			"token": "90716fa4-18ff-4a32-a8a1-46b91b752cb2",	// token for next function
			"user_id": 26,
			"remark": "Email authorization code",
			"session_type": 9,
			"expired_on": "2020-06-25T10:47:17.709Z",
			"created_on": "2020-05-25T10:47:17.712Z",
			"updated_on": "2020-05-25T10:47:17.712Z"
		}
	}

	Bad response body (status 400)
	{
		"message": "Error message"
	}


-------------------------------------------------------------------------------

Verify authorization code function
- Verify the user email authorization code after sign up
- The authorization code will send to user after sign up function

Method: POST
Server URL: {$BASE_URL}/api/users/verifyAuthorizationCode

Path parameter: None
Query parameter: None
Header parameter: 
	1) "Content-Type": "application/json"
	2) "token": "email authorization token"

Request body (JSON format):
	{
		"code": "user email authorization code (4 or 6 digit code) ",
	}	


Response body:	
	Good response body (status 200)
		99	// return user id 

	Bad response body (status 400)
	{
		"message": "Error message"
	}


-------------------------------------------------------------------------------

Reset passowrd function

Method: POST
Server URL: {$BASE_URL}/api/users/resetPassword

Path parameter: None
Query parameter: None
Header parameter: 
	1) "Content-Type": "application/json"

Request body (JSON format):
	{
		"email": "user email address"
	}	


Response body:	
	Good response body (status 200)
	{
		"id": 25,
  		"last_name": "Goh",
  		"email": "cheowkwee@hotmail.com",
  		"phone_number": "+60126196907",
  		"avatar": null,
  		"biography": null,
  		"account_type": 0,
  		"status": 1,
  		"login_failed_count": 0,
  		"created_on": "2020-05-24T17:33:41.470Z",
  		"updated_on": "2020-05-24T17:33:41.470Z",
  		"session": {
    			"token": "557abf55-3964-4f4f-9002-8fcc99de863c",
    			"user_id": 25,
    			"remark": "Reset password",
    			"session_type": 8,
    			"expired_on": "2020-06-25T10:30:29.105Z",
    			"created_on": "2020-05-25T10:30:29.110Z",
    			"updated_on": "2020-05-25T10:30:29.110Z"
  		}
	}

	Bad response body (status 400 and 40*)
	{
		"message": "Error message"
	}


-------------------------------------------------------------------------------

Update password function

Method: POST
Server URL: {$BASE_URL}/api/users/updatePassword

Path parameter: None
Query parameter: None
Header parameter: 
	1) "Content-Type": "application/json"
	2) "token": "token for reset password"

Request body (JSON format):
	{
		"password": "user password"
	}	


Response body:	
	Good response body (status 200)

		99	// return user id 

	Bad response body (status 400)
	{
		"message": "Error message"
	}


-------------------------------------------------------------------------------


